{"ast":null,"code":"export default function stripPrefix(str){var prefix=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";if(!prefix){return str;}if(str===prefix){return\"/\";}if(str.startsWith(prefix+\"/\")){return str.slice(prefix.length);}return str;}","map":{"version":3,"sources":["D:/MatchSite/.cache/strip-prefix.js"],"names":["stripPrefix","str","prefix","startsWith","slice","length"],"mappings":"AAKA,cAAe,SAASA,CAAAA,WAAT,CAAqBC,GAArB,CAAuC,IAAbC,CAAAA,MAAa,8DACpD,GAAI,CAACA,MAAL,CAAa,CACX,MAAOD,CAAAA,GAAP,CACD,CAED,GAAIA,GAAG,GAAKC,MAAZ,CAAoB,CAClB,UACD,CAED,GAAID,GAAG,CAACE,UAAJ,CAAkBD,MAAlB,KAAJ,CAAkC,CAChC,MAAOD,CAAAA,GAAG,CAACG,KAAJ,CAAUF,MAAM,CAACG,MAAjB,CAAP,CACD,CAED,MAAOJ,CAAAA,GAAP,CACD","sourcesContent":["/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default function stripPrefix(str, prefix = ``) {\n  if (!prefix) {\n    return str\n  }\n\n  if (str === prefix) {\n    return `/`\n  }\n\n  if (str.startsWith(`${prefix}/`)) {\n    return str.slice(prefix.length)\n  }\n\n  return str\n}\n"]},"metadata":{},"sourceType":"module"}