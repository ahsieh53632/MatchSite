{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import React,{useEffect,useState}from'react';import Message from'../Message';import moment from'moment';import Compose from'../Compose';import'./MessageList.css';export default function MessageList(props){var user=props.user,to=props.to,messages=props.messages,_onSend=props.onSend,rest=_objectWithoutProperties(props,[\"user\",\"to\",\"messages\",\"onSend\"]);useEffect(function(){console.log('rerender');console.log(messages);},[messages]);var renderMessages=function renderMessages(){var i=0;var messageCount=messages.length;var tempMessages=[];while(i<messageCount){var previous=messages[i-1];var current=messages[i];var next=messages[i+1];var isMine=current.author===user;var currentMoment=moment(current.timestamp);var prevBySameAuthor=false;var nextBySameAuthor=false;var startsSequence=true;var endsSequence=true;var showTimestamp=true;if(previous){var previousMoment=moment(previous.timestamp);var previousDuration=moment.duration(currentMoment.diff(previousMoment));prevBySameAuthor=previous.author===current.author;if(prevBySameAuthor&&previousDuration.as('hours')<1){startsSequence=false;}if(previousDuration.as('hours')<1){showTimestamp=false;}}if(next){var nextMoment=moment(next.timestamp);var nextDuration=moment.duration(nextMoment.diff(currentMoment));nextBySameAuthor=next.author===current.author;if(nextBySameAuthor&&nextDuration.as('hours')<1){endsSequence=false;}}tempMessages.push(React.createElement(Message,{key:i,isMine:isMine,startsSequence:startsSequence,endsSequence:endsSequence,showTimestamp:showTimestamp,data:current}));i+=1;}return tempMessages;};return React.createElement(\"div\",{className:\"message-list\"},React.createElement(\"div\",{className:\"message-list-container\",style:{padding:'10px',paddingBottom:'70px'}},renderMessages()),React.createElement(Compose,{onSend:function onSend(msg){return _onSend(msg);}}));}","map":{"version":3,"sources":["D:/MatchSite/src/pages/ChatPage/MessageList/index.js"],"names":["React","useEffect","useState","Message","moment","Compose","MessageList","props","user","to","messages","onSend","rest","console","log","renderMessages","i","messageCount","length","tempMessages","previous","current","next","isMine","author","currentMoment","timestamp","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","padding","paddingBottom","msg"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport Compose from '../Compose';\r\nimport './MessageList.css';\r\n\r\nexport default function MessageList(props) {\r\n  const {user, to, messages, onSend, ...rest} = props;\r\n\r\n  useEffect(() => {\r\n    console.log('rerender');\r\n    console.log(messages);\r\n  }, [messages])\r\n\r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.author === user;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n        prevBySameAuthor = previous.author === current.author;\r\n        \r\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as('hours') < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n    return(\r\n      <div className=\"message-list\">\r\n        <div className=\"message-list-container\" style={{padding: '10px', paddingBottom: '70px'}}>{renderMessages()}</div>\r\n        <Compose onSend={(msg) => onSend(msg)}/>\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}