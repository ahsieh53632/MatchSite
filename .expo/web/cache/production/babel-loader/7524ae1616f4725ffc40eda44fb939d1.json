{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,Component}from'react';import socketIOClient from\"socket.io-client\";import ChatRoomHeader from'./chatRoomHeader';import{makeStyles}from'@material-ui/styles';import MessageList from'./MessageList';import CssBaseline from'@material-ui/core/CssBaseline';var ENDPOINT=\"https://matchsitebackend.herokuapp.com/\";function mysqlTimeStampToDate(timestamp){var regex=/^([0-9]{2,4})-([0-1][0-9])-([0-3][0-9])T(?:([0-2][0-9]):([0-5][0-9]):([0-5][0-9])).000Z?$/;var parts=timestamp.replace(regex,\"$1 $2 $3 $4 $5 $6\").split(' ');return new Date(parts[0],parts[1]-1,parts[2],parts[3],parts[4],parts[5]);}var ChatRoom=function ChatRoom(props){var _ref=props||{user:\"\",to:\"\"},user=_ref.user,to=_ref.to,phone=_ref.phone;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),msgs=_React$useState2[0],setMsgs=_React$useState2[1];var _onSend=function onSend(msg){if(typeof window!=='undefined'){fetch('https://matchsitebackend.herokuapp.com/msg/post',{method:'PUT',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"account\":user,\"to\":to,\"msg\":msg})}).then(function(res){return res.json();}).then(function(data){if(data.success){console.log('successfully added to db');}else{console.log('ERROR');}});}setMsgs([].concat(_toConsumableArray(msgs),[{id:new Date().toLocaleDateString(),author:user,message:msg,timestamp:require('moment')().format(\"YYYY-MM-DD HH:mm:ss\")}]));};useEffect(function(){var socket=socketIOClient(ENDPOINT);socket.emit('join',user);socket.on('message',function(msg){setMsgs([].concat(_toConsumableArray(msgs),[msg]));});if(typeof window!=='undefined'){fetch('https://matchsitebackend.herokuapp.com/msg/get',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"account\":user,\"to\":to})}).then(function(res){return res.json();}).then(function(data){if(data.success){var fetchedMsgs=data.data.map(function(row,i){return{id:i,author:row.userName,message:row.msg,timestamp:mysqlTimeStampToDate(row.time)};});console.log(fetchedMsgs);setMsgs(fetchedMsgs);}else{console.log('ERROR');}});}return function(){return socket.disconnect();};},[]);return React.createElement(React.Fragment,null,React.createElement(CssBaseline,null),React.createElement(ChatRoomHeader,{userName:user,phone:phone}),React.createElement(\"div\",null,React.createElement(MessageList,{user:user,messages:msgs,onSend:function onSend(message){return _onSend(message);}})));};export default ChatRoom;","map":{"version":3,"sources":["D:/MatchSite/src/pages/ChatPage/chatRoom.js"],"names":["React","useEffect","Component","socketIOClient","ChatRoomHeader","makeStyles","MessageList","CssBaseline","ENDPOINT","mysqlTimeStampToDate","timestamp","regex","parts","replace","split","Date","ChatRoom","props","user","to","phone","useState","msgs","setMsgs","onSend","msg","window","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","id","toLocaleDateString","author","message","require","format","socket","emit","on","fetchedMsgs","map","row","i","userName","time","disconnect"],"mappings":"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","sourcesContent":["import React, {useEffect, Component } from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ChatRoomHeader from './chatRoomHeader';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport MessageList from './MessageList'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\n\r\nconst ENDPOINT = \"https://matchsitebackend.herokuapp.com/\"\r\n\r\nfunction mysqlTimeStampToDate(timestamp) {\r\n    //function parses mysql datetime string and returns javascript Date object\r\n    //input has to be in this format: 2007-06-05 15:26:02\r\n    var regex=/^([0-9]{2,4})-([0-1][0-9])-([0-3][0-9])T(?:([0-2][0-9]):([0-5][0-9]):([0-5][0-9])).000Z?$/;\r\n    var parts=timestamp.replace(regex,\"$1 $2 $3 $4 $5 $6\").split(' ');\r\n    return new Date(parts[0],parts[1]-1,parts[2],parts[3],parts[4],parts[5]);\r\n}\r\n\r\nconst ChatRoom = (props) => {\r\n    const {user, to, phone} = props || {user: \"\", to: \"\"};\r\n    const [msgs, setMsgs] = React.useState([]);\r\n\r\n    const onSend = (msg) => {\r\n\r\n        if (typeof window !== 'undefined') {\r\n            fetch('https://matchsitebackend.herokuapp.com/msg/post', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"account\": user,\r\n                    \"to\": to,\r\n                    \"msg\": msg,\r\n                })\r\n                })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        console.log('successfully added to db')\r\n                    } else {\r\n                        console.log('ERROR')\r\n                    }\r\n                })\r\n        }\r\n        setMsgs([...msgs, {\r\n            id: new Date().toLocaleDateString(),\r\n            author: user,\r\n            message: msg,\r\n            timestamp: require('moment')().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        }])\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT);\r\n        socket.emit('join', user);\r\n        socket.on('message', msg => {setMsgs([...msgs, msg])});\r\n        if (typeof window !== 'undefined') {\r\n            fetch('https://matchsitebackend.herokuapp.com/msg/get', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"account\": user,\r\n                    \"to\": to,\r\n                })\r\n                })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        const fetchedMsgs = data.data.map((row, i) => {\r\n                            return {\r\n                                id: i,\r\n                                author: row.userName,\r\n                                message: row.msg,\r\n                                timestamp: mysqlTimeStampToDate(row.time)\r\n                            }\r\n                        })\r\n                        console.log(fetchedMsgs);\r\n                        setMsgs(fetchedMsgs);\r\n                    } else {\r\n                      console.log('ERROR')\r\n                    }})\r\n        }\r\n        return () => socket.disconnect();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <ChatRoomHeader userName={user} phone={phone}/>\r\n            <div>\r\n                <MessageList user={user} messages={msgs} onSend={(message) => onSend(message)}/>\r\n            </div>\r\n        </>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}