{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { render } from 'react-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useSprings, animated, interpolate } from 'react-spring';\nimport { useGesture, useDrag } from 'react-use-gesture';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    '@global': {\n      'body': {\n        background: '#E5F8FF',\n        overflow: 'hidden'\n      }\n    },\n    root: {\n      boxSizing: 'border-box',\n      position: 'fixed',\n      width: '100%',\n      height: '100%'\n    },\n    div: {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      width: '100%',\n      height: '75vh',\n      willChange: 'transform',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    innerDiv: {\n      zIndex: '1',\n      boxSizing: 'border-box',\n      backgroundColor: 'white',\n      backgroundSize: 'auto 100%',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center center',\n      width: '35vh',\n      maxWidth: '280px',\n      height: '80vh',\n      maxHeight: '500px',\n      willChange: 'transform',\n      borderRadius: '30px',\n      boxShadow: '0 12.5px 100px -10px rgba(90, 90, 90, 0.4), 0 10px 10px -10px rgba(90, 90, 90, 0.3)',\n      color: \"white\",\n      display: 'flex',\n      backgroundSize: '35vh 75vh'\n    },\n    text: {\n      width: '60vw',\n      textShadow: '2px 2px rgba(0, 0, 0, 1)'\n    },\n    boldText: {\n      textShadow: '2px 2px rgba(0, 0, 0, 1)',\n      fontSize: '20px'\n    },\n    container: {\n      position: 'relative',\n      padding: '0 0px 15px 10px',\n      bottom: '0'\n    }\n  };\n});\n\nvar to = function to(i) {\n  return {\n    x: 0,\n    y: i * -4,\n    scale: 1,\n    rot: -10 + Math.random() * 20,\n    delay: i * 100\n  };\n};\n\nvar from = function from(i) {\n  return {\n    x: 0,\n    y: i * -4,\n    scale: .2,\n    rot: -10 + Math.random() * 20,\n    delay: i * 100\n  };\n};\n\nvar trans = function trans(r, s) {\n  return \"perspective(1500px) rotateX(30deg) rotateY(\" + r / 10 + \"deg) rotateZ(\" + r + \"deg) scale(\" + s + \")\";\n};\n\nvar Deck = function Deck(props) {\n  var startTime = props.startTime,\n      endTime = props.endTime,\n      type = props.type,\n      userName = props.userName,\n      loc = props.loc,\n      rest = _objectWithoutProperties(props, [\"startTime\", \"endTime\", \"type\", \"userName\", \"loc\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(function () {\n    return new Set();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      gone = _useState2[0];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      matching = _useState4[0],\n      setMatching = _useState4[1];\n\n  var _useSprings = useSprings(matching.length, function (i) {\n    return _objectSpread(_objectSpread({}, to(i)), {}, {\n      from: from(i)\n    });\n  }),\n      _useSprings2 = _slicedToArray(_useSprings, 2),\n      ps = _useSprings2[0],\n      set = _useSprings2[1];\n\n  var b1 = useDrag(function (_ref) {\n    var _ref$args = _slicedToArray(_ref.args, 1),\n        index = _ref$args[0],\n        down = _ref.down,\n        _ref$movement = _slicedToArray(_ref.movement, 1),\n        mx = _ref$movement[0],\n        distance = _ref.distance,\n        _ref$direction = _slicedToArray(_ref.direction, 1),\n        xDir = _ref$direction[0],\n        velocity = _ref.velocity;\n\n    var trigger = velocity > 0.2;\n    var dir = xDir < 0 ? -1 : 1;\n    if (!down && trigger) gone.add(index);\n\n    if (!down && trigger) {\n      if (dir == 1) {\n        match(userName, matching[index].username, startTime, endTime, type, matching[index].name, \"YES\");\n      } else {\n        match(userName, matching[index].username, startTime, endTime, type, matching[index].name, \"NO\");\n      }\n    }\n\n    set(function (i) {\n      if (index !== i) return;\n      var isGone = gone.has(index);\n      var x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0;\n      var rot = mx / 100 + (isGone ? dir * 10 * velocity : 0);\n      var scale = down ? 1.1 : 1;\n      return {\n        x: x,\n        rot: rot,\n        scale: scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n  });\n\n  function match(userName, who, startTime, endTime, type, name, decision) {\n    if (typeof window !== 'undefined') {\n      fetch('https://matchsitebackend.herokuapp.com/matched/set', {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"account\": userName,\n          \"who\": who,\n          \"startTime\": startTime,\n          \"endTime\": endTime,\n          \"type\": type,\n          \"decision\": decision\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success) {\n          console.log('match inserted to db');\n\n          if (data.matched) {\n            alert(\"CONGRATS! you just matched with \" + name);\n          }\n        } else {\n          alert('there is an error!');\n        }\n      });\n    }\n  }\n\n  useEffect(function () {\n    if (typeof window !== 'undefined') {\n      fetch('https://matchsitebackend.herokuapp.com/matching/get', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"account\": userName,\n          \"startTime\": startTime,\n          \"endTime\": endTime,\n          \"type\": type,\n          \"loc\": loc\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success) {\n          console.log('got info');\n          console.log(data.data);\n          setMatching(data.data);\n        } else {\n          console.log('NO ONE TO MATCH :(');\n          setMatching([]);\n        }\n      });\n    }\n  }, [type, startTime, endTime]);\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(\"header\", null, React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  })), React.createElement(\"div\", null, React.createElement(Grid, {\n    container: true\n  }, ps.map(function (_ref2, i) {\n    var x = _ref2.x,\n        y = _ref2.y,\n        rot = _ref2.rot,\n        scale = _ref2.scale;\n    return React.createElement(animated.div, {\n      className: classes.div,\n      key: i,\n      style: {\n        transform: interpolate([x, y], function (x, y) {\n          return \"translate3d(\" + x + \"px,\" + y + \"px,0)\";\n        })\n      }\n    }, React.createElement(animated.div, _extends({}, b1(i), {\n      className: classes.innerDiv,\n      style: {\n        transform: interpolate([rot, scale], trans),\n        backgroundImage: \"url(\" + (\"https://matchsiteimg.s3.ap-northeast-2.amazonaws.com/\" + matching[i].image_path) + \")\"\n      }\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      direction: \"column\",\n      alignItems: \"stretch\",\n      className: classes.container\n    }, React.createElement(Grid, {\n      item: true,\n      className: classes.test\n    }, React.createElement(Typography, {\n      className: classes.boldText\n    }, matching[i].name, \",\", matching[i].age)), React.createElement(Grid, {\n      item: true,\n      className: classes.text\n    }, React.createElement(Typography, null, matching[i].msg)))));\n  }))));\n};\n\nexport default Deck;","map":{"version":3,"sources":["D:/MatchSite/src/pages/cardStack.js"],"names":["render","React","useEffect","useState","useSprings","animated","interpolate","useGesture","useDrag","makeStyles","Grid","Typography","useStyles","theme","background","overflow","root","boxSizing","position","width","height","div","willChange","display","alignItems","justifyContent","innerDiv","zIndex","backgroundColor","backgroundSize","backgroundRepeat","backgroundPosition","maxWidth","maxHeight","borderRadius","boxShadow","color","text","textShadow","boldText","fontSize","container","padding","bottom","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Deck","props","startTime","endTime","type","userName","loc","rest","classes","Set","gone","matching","setMatching","length","ps","set","b1","args","index","down","movement","mx","distance","direction","xDir","velocity","trigger","dir","add","match","username","name","isGone","has","window","innerWidth","undefined","config","friction","tension","who","decision","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","matched","alert","map","transform","backgroundImage","image_path","test","age","msg"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSprings, animated, interpolate } from 'react-spring'\r\nimport { useGesture, useDrag } from 'react-use-gesture'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    'body': {\r\n      background: '#E5F8FF',\r\n      overflow: 'hidden',\r\n    },\r\n  },\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  div: {\r\n    boxSizing: 'border-box',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '75vh',\r\n    willChange: 'transform',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  innerDiv: {\r\n    zIndex: '1',  \r\n    boxSizing: 'border-box',\r\n    backgroundColor: 'white',\r\n    backgroundSize: 'auto 100%',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    width: '35vh',\r\n    maxWidth: '280px',\r\n    height: '80vh',\r\n    maxHeight: '500px',\r\n    willChange: 'transform',\r\n    borderRadius: '30px',\r\n    boxShadow: '0 12.5px 100px -10px rgba(90, 90, 90, 0.4), 0 10px 10px -10px rgba(90, 90, 90, 0.3)',\r\n    color: \"white\",\r\n    display: 'flex',\r\n    backgroundSize: '35vh 75vh',\r\n  },\r\n\r\n  text: {\r\n    width: '60vw',\r\n    textShadow: '2px 2px rgba(0, 0, 0, 1)',\r\n  },\r\n\r\n  boldText: {\r\n    textShadow: '2px 2px rgba(0, 0, 0, 1)',\r\n    fontSize: '20px'\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n    padding: '0 0px 15px 10px',\r\n    bottom:'0',\r\n  },\r\n}))\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\r\nconst from = i => ({ x: 0, y: i * -4, scale: .2, rot: -10 + Math.random() * 20, delay: i * 100 })\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\r\n\r\n\r\n\r\nconst Deck = (props) => {\r\n  const {startTime, endTime, type, userName, loc, ...rest} = props;\r\n  const classes = useStyles()\r\n  const [gone] = useState(() => new Set())\r\n  const [matching, setMatching] = useState([]);\r\n  const [ps, set] = useSprings(matching.length, i => ({ ...to(i), from: from(i) })) \r\n  const b1 = useDrag(({ args: [index], down, movement: [mx], distance, direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2 \r\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index)\r\n    if (!down && trigger) {\r\n      if (dir == 1) {\r\n        match(userName, matching[index].username, startTime, endTime, type, matching[index].name, \"YES\");\r\n      } else {\r\n        match(userName, matching[index].username, startTime, endTime, type, matching[index].name, \"NO\");\r\n      }\r\n    }\r\n    set(i => {\r\n      if (index !== i) return \r\n      const isGone = gone.has(index)\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\r\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\r\n    })\r\n    \r\n  })\r\n\r\n  function match(userName, who, startTime, endTime, type, name, decision) {\r\n    if (typeof window !== 'undefined') {\r\n      fetch('https://matchsitebackend.herokuapp.com/matched/set', {\r\n                  method: 'PUT',\r\n                  headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify({\r\n                      \"account\": userName,\r\n                      \"who\": who,\r\n                      \"startTime\": startTime,\r\n                      \"endTime\": endTime,\r\n                      \"type\": type,\r\n                      \"decision\": decision,\r\n                  })\r\n                  })\r\n                  .then(res => res.json())\r\n                  .then(data => {\r\n                      if (data.success) {\r\n                        console.log('match inserted to db');\r\n                        if (data.matched) {\r\n                          alert(\"CONGRATS! you just matched with \" + name)\r\n                        }\r\n                      } else {\r\n                          alert('there is an error!');\r\n                      }\r\n                      })\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      fetch('https://matchsitebackend.herokuapp.com/matching/get', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              \"account\": userName,\r\n              \"startTime\": startTime,\r\n              \"endTime\": endTime,\r\n              \"type\": type,\r\n              \"loc\": loc,\r\n          })\r\n          })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              if (data.success) {\r\n              console.log('got info');\r\n              console.log(data.data);\r\n              setMatching(data.data);\r\n              } else {\r\n                console.log('NO ONE TO MATCH :(')\r\n                setMatching([]);\r\n              }\r\n              })\r\n      }}, [type, startTime, endTime]);\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <header>\r\n      <meta\r\n      name=\"viewport\"\r\n      content=\"minimum-scale=1, initial-scale=1, width=device-width\"\r\n      />\r\n      </header>\r\n    <div>\r\n    <Grid container>  \r\n    {ps.map(({ x, y, rot, scale }, i) => (\r\n    <animated.div className={classes.div} key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\r\n      <animated.div {...b1(i)}\r\n        className={classes.innerDiv}\r\n        style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${\"https://matchsiteimg.s3.ap-northeast-2.amazonaws.com/\"+matching[i].image_path})` }}>\r\n        <Grid container justify=\"flex-end\" direction=\"column\" alignItems=\"stretch\" className={classes.container}>\r\n        <Grid item className={classes.test}>\r\n      <Typography className={classes.boldText}>{matching[i].name},{matching[i].age}</Typography>\r\n        </Grid>\r\n        <Grid item className={classes.text}>\r\n          <Typography>{matching[i].msg}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      </animated.div>\r\n    </animated.div>))}\r\n    </Grid>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Deck;"]},"metadata":{},"sourceType":"module"}