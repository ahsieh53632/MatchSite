{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery } from \"gatsby\";\n\nfunction SEO(_ref) {\n  var description = _ref.description,\n      lang = _ref.lang,\n      meta = _ref.meta,\n      title = _ref.title;\n\n  var _useStaticQuery = useStaticQuery(\"63159454\"),\n      site = _useStaticQuery.site;\n\n  var metaDescription = description || site.siteMetadata.description;\n  return React.createElement(Helmet, {\n    htmlAttributes: {\n      lang: lang\n    },\n    title: title,\n    titleTemplate: \"%s | \" + site.siteMetadata.title,\n    meta: [{\n      name: \"description\",\n      content: metaDescription\n    }, {\n      property: \"og:title\",\n      content: title\n    }, {\n      property: \"og:description\",\n      content: metaDescription\n    }, {\n      property: \"og:type\",\n      content: \"website\"\n    }, {\n      name: \"twitter:card\",\n      content: \"summary\"\n    }, {\n      name: \"twitter:creator\",\n      content: site.siteMetadata.author\n    }, {\n      name: \"twitter:title\",\n      content: title\n    }, {\n      name: \"twitter:description\",\n      content: metaDescription\n    }].concat(meta)\n  });\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: \"\"\n};\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\nexport default SEO;","map":{"version":3,"sources":["D:/MatchSite/src/components/seo.js"],"names":["React","PropTypes","Helmet","useStaticQuery","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","name","content","property","author","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"mappings":"AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,cAAT,QAAwC,QAAxC;;AAEA,SAASC,GAAT,OAAiD;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,wBAC9BL,cAAc,YADgB;AAAA,MACvCM,IADuC,mBACvCA,IADuC;;AAe/C,MAAMC,eAAe,GAAGL,WAAW,IAAII,IAAI,CAACE,YAAL,CAAkBN,WAAzD;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAJA;AADc,KADlB;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,aAAa,YAAUC,IAAI,CAACE,YAAL,CAAkBH,KAL3C;AAME,IAAA,IAAI,EAAE,CACJ;AACEI,MAAAA,IAAI,eADN;AAEEC,MAAAA,OAAO,EAAEH;AAFX,KADI,EAKJ;AACEI,MAAAA,QAAQ,YADV;AAEED,MAAAA,OAAO,EAAEL;AAFX,KALI,EASJ;AACEM,MAAAA,QAAQ,kBADV;AAEED,MAAAA,OAAO,EAAEH;AAFX,KATI,EAaJ;AACEI,MAAAA,QAAQ,WADV;AAEED,MAAAA,OAAO;AAFT,KAbI,EAiBJ;AACED,MAAAA,IAAI,gBADN;AAEEC,MAAAA,OAAO;AAFT,KAjBI,EAqBJ;AACED,MAAAA,IAAI,mBADN;AAEEC,MAAAA,OAAO,EAAEJ,IAAI,CAACE,YAAL,CAAkBI;AAF7B,KArBI,EAyBJ;AACEH,MAAAA,IAAI,iBADN;AAEEC,MAAAA,OAAO,EAAEL;AAFX,KAzBI,EA6BJ;AACEI,MAAAA,IAAI,uBADN;AAEEC,MAAAA,OAAO,EAAEH;AAFX,KA7BI,EAiCJM,MAjCI,CAiCGT,IAjCH;AANR,IADF;AA2CD;;AAEDH,GAAG,CAACa,YAAJ,GAAmB;AACjBX,EAAAA,IAAI,MADa;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBF,EAAAA,WAAW;AAHM,CAAnB;AAMAD,GAAG,CAACc,SAAJ,GAAgB;AACdb,EAAAA,WAAW,EAAEJ,SAAS,CAACkB,MADT;AAEdb,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MAFF;AAGdZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,MAA5B,CAHQ;AAIdb,EAAAA,KAAK,EAAEP,SAAS,CAACkB,MAAV,CAAiBG;AAJV,CAAhB;AAOA,eAAelB,GAAf","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"]},"metadata":{},"sourceType":"module"}