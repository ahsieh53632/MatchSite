{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { useEffect, useState } from 'react';\nimport Message from '../Message';\nimport moment from 'moment';\nimport Compose from '../Compose';\nimport './MessageList.css';\nexport default function MessageList(props) {\n  var user = props.user,\n      to = props.to,\n      messages = props.messages,\n      _onSend = props.onSend,\n      rest = _objectWithoutProperties(props, [\"user\", \"to\", \"messages\", \"onSend\"]);\n\n  useEffect(function () {\n    console.log('rerender');\n    console.log(messages);\n  }, [messages]);\n\n  var renderMessages = function renderMessages() {\n    var i = 0;\n    var messageCount = messages.length;\n    var tempMessages = [];\n\n    while (i < messageCount) {\n      var previous = messages[i - 1];\n      var current = messages[i];\n      var next = messages[i + 1];\n      var isMine = current.author === user;\n      var currentMoment = moment(current.timestamp);\n      var prevBySameAuthor = false;\n      var nextBySameAuthor = false;\n      var startsSequence = true;\n      var endsSequence = true;\n      var showTimestamp = true;\n\n      if (previous) {\n        var previousMoment = moment(previous.timestamp);\n        var previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        var nextMoment = moment(next.timestamp);\n        var nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(React.createElement(Message, {\n        key: i,\n        isMine: isMine,\n        startsSequence: startsSequence,\n        endsSequence: endsSequence,\n        showTimestamp: showTimestamp,\n        data: current\n      }));\n      i += 1;\n    }\n\n    return tempMessages;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"message-list\"\n  }, React.createElement(\"div\", {\n    className: \"message-list-container\",\n    style: {\n      padding: '10px',\n      paddingBottom: '70px'\n    }\n  }, renderMessages()), React.createElement(Compose, {\n    onSend: function onSend(msg) {\n      return _onSend(msg);\n    }\n  }));\n}","map":{"version":3,"sources":["D:/MatchSite/src/pages/ChatPage/MessageList/index.js"],"names":["React","useEffect","useState","Message","moment","Compose","MessageList","props","user","to","messages","onSend","rest","console","log","renderMessages","i","messageCount","length","tempMessages","previous","current","next","isMine","author","currentMoment","timestamp","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","padding","paddingBottom","msg"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport Compose from '../Compose';\r\nimport './MessageList.css';\r\n\r\nexport default function MessageList(props) {\r\n  const {user, to, messages, onSend, ...rest} = props;\r\n\r\n  useEffect(() => {\r\n    console.log('rerender');\r\n    console.log(messages);\r\n  }, [messages])\r\n\r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.author === user;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n        prevBySameAuthor = previous.author === current.author;\r\n        \r\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as('hours') < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n    return(\r\n      <div className=\"message-list\">\r\n        <div className=\"message-list-container\" style={{padding: '10px', paddingBottom: '70px'}}>{renderMessages()}</div>\r\n        <Compose onSend={(msg) => onSend(msg)}/>\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}