{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\MatchSite\\\\src\\\\pages\\\\ChatPage\\\\MessageList\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Message from '../Message';\nimport moment from 'moment';\nimport Compose from '../Compose';\nimport './MessageList.css';\nvar MY_USER_ID = 'apple';\nexport default function MessageList(props) {\n  var user = props.user,\n      to = props.to,\n      msgs = props.msgs,\n      rest = _objectWithoutProperties(props, [\"user\", \"to\", \"msgs\"]);\n\n  useEffect(function () {}, [msgs]);\n\n  var getMessages = function getMessages() {\n    var tempMessages = [{\n      id: 1,\n      author: 'apple',\n      message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n      timestamp: new Date().getTime()\n    }, {\n      id: 2,\n      author: 'orange',\n      message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n      timestamp: new Date().getTime()\n    }, {\n      id: 3,\n      author: 'orange',\n      message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n      timestamp: new Date().getTime()\n    }, {\n      id: 4,\n      author: 'apple',\n      message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n      timestamp: new Date().getTime()\n    }, {\n      id: 5,\n      author: 'apple',\n      message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n      timestamp: new Date().getTime()\n    }, {\n      id: 6,\n      author: 'apple',\n      message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n      timestamp: new Date().getTime()\n    }, {\n      id: 7,\n      author: 'orange',\n      message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n      timestamp: new Date().getTime()\n    }, {\n      id: 8,\n      author: 'orange',\n      message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n      timestamp: new Date().getTime()\n    }, {\n      id: 9,\n      author: 'apple',\n      message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n      timestamp: new Date().getTime()\n    }, {\n      id: 10,\n      author: 'orange',\n      message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n      timestamp: new Date().getTime()\n    }];\n    setMessages([].concat(_toConsumableArray(messages), tempMessages));\n  };\n\n  var renderMessages = function renderMessages() {\n    var i = 0;\n    var messageCount = messages.length;\n    var tempMessages = [];\n\n    while (i < messageCount) {\n      var previous = messages[i - 1];\n      var current = messages[i];\n      var next = messages[i + 1];\n      var isMine = current.author === MY_USER_ID;\n      var currentMoment = moment(current.timestamp);\n      var prevBySameAuthor = false;\n      var nextBySameAuthor = false;\n      var startsSequence = true;\n      var endsSequence = true;\n      var showTimestamp = true;\n\n      if (previous) {\n        var previousMoment = moment(previous.timestamp);\n        var previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        var nextMoment = moment(next.timestamp);\n        var nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(React.createElement(Message, {\n        key: i,\n        isMine: isMine,\n        startsSequence: startsSequence,\n        endsSequence: endsSequence,\n        showTimestamp: showTimestamp,\n        data: current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }));\n      i += 1;\n    }\n\n    return tempMessages;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"message-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    className: \"message-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, renderMessages()), React.createElement(Compose, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["D:/MatchSite/src/pages/ChatPage/MessageList/index.js"],"names":["React","useEffect","useState","Message","moment","Compose","MY_USER_ID","MessageList","props","user","to","msgs","rest","getMessages","tempMessages","id","author","message","timestamp","Date","getTime","setMessages","messages","renderMessages","i","messageCount","length","previous","current","next","isMine","currentMoment","prevBySameAuthor","nextBySameAuthor","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport Compose from '../Compose';\r\nimport './MessageList.css';\r\n\r\nconst MY_USER_ID = 'apple';\r\n\r\nexport default function MessageList(props) {\r\n  const {user, to, msgs, ...rest} = props;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  }, [msgs])\r\n  const getMessages = () => {\r\n     var tempMessages = [\r\n        {\r\n          id: 1,\r\n          author: 'apple',\r\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 2,\r\n          author: 'orange',\r\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 3,\r\n          author: 'orange',\r\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 4,\r\n          author: 'apple',\r\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 5,\r\n          author: 'apple',\r\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 6,\r\n          author: 'apple',\r\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 7,\r\n          author: 'orange',\r\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 8,\r\n          author: 'orange',\r\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 9,\r\n          author: 'apple',\r\n          message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\r\n          timestamp: new Date().getTime()\r\n        },\r\n        {\r\n          id: 10,\r\n          author: 'orange',\r\n          message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\r\n          timestamp: new Date().getTime()\r\n        },\r\n      ]\r\n      setMessages([...messages, ...tempMessages])\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      let previous = messages[i - 1];\r\n      let current = messages[i];\r\n      let next = messages[i + 1];\r\n      let isMine = current.author === MY_USER_ID;\r\n      let currentMoment = moment(current.timestamp);\r\n      let prevBySameAuthor = false;\r\n      let nextBySameAuthor = false;\r\n      let startsSequence = true;\r\n      let endsSequence = true;\r\n      let showTimestamp = true;\r\n\r\n      if (previous) {\r\n        let previousMoment = moment(previous.timestamp);\r\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n        prevBySameAuthor = previous.author === current.author;\r\n        \r\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\r\n          startsSequence = false;\r\n        }\r\n\r\n        if (previousDuration.as('hours') < 1) {\r\n          showTimestamp = false;\r\n        }\r\n      }\r\n\r\n      if (next) {\r\n        let nextMoment = moment(next.timestamp);\r\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n        nextBySameAuthor = next.author === current.author;\r\n\r\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n          endsSequence = false;\r\n        }\r\n      }\r\n\r\n      tempMessages.push(\r\n        <Message\r\n          key={i}\r\n          isMine={isMine}\r\n          startsSequence={startsSequence}\r\n          endsSequence={endsSequence}\r\n          showTimestamp={showTimestamp}\r\n          data={current}\r\n        />\r\n      );\r\n\r\n      // Proceed to the next message.\r\n      i += 1;\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n    return(\r\n      <div className=\"message-list\">\r\n        <div className=\"message-list-container\">{renderMessages()}</div>\r\n        <Compose />\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}