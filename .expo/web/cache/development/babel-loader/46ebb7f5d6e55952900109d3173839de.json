{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\MatchSite\\\\src\\\\pages\\\\using-typescript.tsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nvar UsingTypescript = function UsingTypescript(_ref) {\n  var data = _ref.data,\n      path = _ref.path;\n  return React.createElement(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, React.createElement(SEO, {\n    title: \"Using TypeScript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"Gatsby supports TypeScript by default!\"), React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"This means that you can create and write \", React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 49\n    }\n  }, \".ts/.tsx\"), \" files for your pages, components etc. Please note that the \", React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 126\n    }\n  }, \"gatsby-*.js\"), \" files (like gatsby-node.js) currently don't support TypeScript yet.\"), React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"For type checking you'll want to install \", React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 49\n    }\n  }, \"typescript\"), \" via npm and run \", React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 85\n    }\n  }, \"tsc --init\"), \" to create a \", React.createElement(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 117\n    }\n  }, \".tsconfig\"), \" file.\"), React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"You're currently on the page \\\"\", path, \"\\\" which was built on \", data.site.buildTime, \".\"), React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"To learn more, head over to our \", React.createElement(\"a\", {\n    href: \"https://www.gatsbyjs.org/docs/typescript/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 40\n    }\n  }, \"documentation about TypeScript\"), \".\"), React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Go back to the homepage\"));\n};\n\nvar _default = UsingTypescript;\nexport default _default;\nexport var query = \"2907560070\";\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(UsingTypescript, \"UsingTypescript\", \"D:\\\\MatchSite\\\\src\\\\pages\\\\using-typescript.tsx\");\n  reactHotLoader.register(query, \"query\", \"D:\\\\MatchSite\\\\src\\\\pages\\\\using-typescript.tsx\");\n  reactHotLoader.register(_default, \"default\", \"D:\\\\MatchSite\\\\src\\\\pages\\\\using-typescript.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["D:/MatchSite/src/pages/using-typescript.tsx"],"names":["UsingTypescript","data","path","query"],"mappings":"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","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <SEO title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\r\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\r\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\r\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}