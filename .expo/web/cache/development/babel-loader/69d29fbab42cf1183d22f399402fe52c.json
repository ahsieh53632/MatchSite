{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link, { withPrefix, withAssetPrefix, navigate, push, replace, navigateTo, parsePath } from \"gatsby-link\";\nimport { useScrollRestoration } from \"gatsby-react-router-scroll\";\nimport PageRenderer from \"./public-page-renderer\";\nimport loader from \"./loader\";\nvar prefetchPathname = loader.enqueue;\nvar StaticQueryContext = React.createContext({});\n\nfunction StaticQueryDataRenderer(_ref) {\n  var staticQueryData = _ref.staticQueryData,\n      data = _ref.data,\n      query = _ref.query,\n      render = _ref.render;\n  var finalData = data ? data.data : staticQueryData[query] && staticQueryData[query].data;\n  return React.createElement(React.Fragment, null, finalData && render(finalData), !finalData && React.createElement(\"div\", null, \"Loading (StaticQuery)\"));\n}\n\nvar StaticQuery = function StaticQuery(props) {\n  var data = props.data,\n      query = props.query,\n      render = props.render,\n      children = props.children;\n  return React.createElement(StaticQueryContext.Consumer, null, function (staticQueryData) {\n    return React.createElement(StaticQueryDataRenderer, {\n      data: data,\n      query: query,\n      render: render || children,\n      staticQueryData: staticQueryData\n    });\n  });\n};\n\nvar useStaticQuery = function useStaticQuery(query) {\n  var _context$query;\n\n  if (typeof React.useContext !== \"function\" && process.env.NODE_ENV === \"development\") {\n    throw new Error(\"You're likely using a version of React that doesn't support Hooks\\n\" + \"Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.\");\n  }\n\n  var context = React.useContext(StaticQueryContext);\n\n  if (isNaN(Number(query))) {\n    throw new Error(\"useStaticQuery was called with a string but expects to be called using `graphql`. Try this:\\n\\nimport { useStaticQuery, graphql } from 'gatsby';\\n\\nuseStaticQuery(graphql`\" + query + \"`);\\n\");\n  }\n\n  if (context == null ? void 0 : (_context$query = context[query]) == null ? void 0 : _context$query.data) {\n    return context[query].data;\n  } else {\n    throw new Error(\"The result of this StaticQuery could not be fetched.\\n\\n\" + \"This is likely a bug in Gatsby and if refreshing the page does not fix it, \" + \"please open an issue in https://github.com/gatsbyjs/gatsby/issues\");\n  }\n};\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func\n};\n\nfunction graphql() {\n  throw new Error(\"It appears like Gatsby is misconfigured. Gatsby related `graphql` calls \" + \"are supposed to only be evaluated at compile time, and then compiled away. \" + \"Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n\" + \"Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.\");\n}\n\nexport { Link, withAssetPrefix, withPrefix, graphql, parsePath, navigate, push, replace, navigateTo, useScrollRestoration, StaticQueryContext, StaticQuery, PageRenderer, useStaticQuery, prefetchPathname };","map":{"version":3,"sources":["D:/MatchSite/.cache/gatsby-browser-entry.js"],"names":["React","PropTypes","Link","withPrefix","withAssetPrefix","navigate","push","replace","navigateTo","parsePath","useScrollRestoration","PageRenderer","loader","prefetchPathname","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","StaticQuery","props","children","useStaticQuery","useContext","process","env","NODE_ENV","Error","context","isNaN","Number","propTypes","object","string","isRequired","func","graphql"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport { useScrollRestoration } from \"gatsby-react-router-scroll\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context?.[query]?.data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  useScrollRestoration,\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n"]},"metadata":{},"sourceType":"module"}